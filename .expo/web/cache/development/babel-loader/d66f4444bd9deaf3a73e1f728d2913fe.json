{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thebeliverbot/Desktop/practice-stuff/news-app/components/TopNavigation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { NewsContext } from \"../API/Context\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nvar TopNavigation = function TopNavigation(_ref) {\n  var index = _ref.index,\n      setIndex = _ref.setIndex;\n\n  var _useContext = useContext(NewsContext),\n      darkTheme = _useContext.darkTheme,\n      setDarkTheme = _useContext.setDarkTheme,\n      fetchNews = _useContext.fetchNews;\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: darkTheme ? \"#282C35\" : \"white\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, index === 0 ? React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return setDarkTheme(!darkTheme);\n    },\n    style: styles.left,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      color: darkTheme ? \"lightgrey\" : \"black\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"theme-light-dark\",\n    size: 24,\n    color: \"#007FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }))) : React.createElement(TouchableOpacity, {\n    style: styles.left,\n    onPress: function onPress() {\n      return setIndex(index === 0 ? 1 : 0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(SimpleLineIcons, {\n    name: \"arrow-left\",\n    size: 15,\n    color: \"#007FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      color: darkTheme ? \"lightgrey\" : \"black\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Discover\")), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.center), {}, {\n      color: darkTheme ? \"white\" : \"black\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, index ? \"All News\" : \"Discover\"), index ? React.createElement(TouchableOpacity, {\n    style: styles.right,\n    onPress: function onPress() {\n      return fetchNews(\"general\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(AntDesign, {\n    name: \"reload1\",\n    size: 24,\n    color: \"#007FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }))) : React.createElement(TouchableOpacity, {\n    style: styles.left,\n    onPress: function onPress() {\n      return setIndex(index === 0 ? 1 : 0);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.text), {}, {\n      color: darkTheme ? \"white\" : \"black\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"All News\"), React.createElement(SimpleLineIcons, {\n    name: \"arrow-right\",\n    size: 15,\n    color: \"#007FFF\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default TopNavigation;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 10,\n    alignItems: \"center\",\n    borderBottomColor: \"black\",\n    borderBottomWidth: 0.5\n  },\n  center: {\n    paddingBottom: 6,\n    borderBottomColor: \"#007FFF\",\n    borderBottomWidth: 5,\n    borderRadius: 10,\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  left: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 80,\n    justifyContent: \"space-between\"\n  },\n  text: {\n    fontSize: 16\n  },\n  right: {\n    width: 80,\n    alignItems: \"flex-end\"\n  }\n});","map":{"version":3,"sources":["/home/thebeliverbot/Desktop/practice-stuff/news-app/components/TopNavigation.js"],"names":["React","useContext","AntDesign","SimpleLineIcons","Feather","NewsContext","MaterialCommunityIcons","TopNavigation","index","setIndex","darkTheme","setDarkTheme","fetchNews","styles","container","backgroundColor","left","text","color","center","right","StyleSheet","create","flexDirection","justifyContent","padding","alignItems","borderBottomColor","borderBottomWidth","paddingBottom","borderRadius","fontSize","fontWeight","width"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { SimpleLineIcons } from \"@expo/vector-icons\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { NewsContext } from \"../API/Context\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\nconst TopNavigation = ({ index, setIndex }) => {\n  const { darkTheme, setDarkTheme, fetchNews } = useContext(NewsContext);\n\n  return (\n    <View\n      style={{\n        ...styles.container,\n        backgroundColor: darkTheme ? \"#282C35\" : \"white\",\n      }}\n    >\n      {index === 0 ? (\n        <TouchableOpacity\n          onPress={() => setDarkTheme(!darkTheme)}\n          style={styles.left}\n        >\n          <Text\n            style={{ ...styles.text, color: darkTheme ? \"lightgrey\" : \"black\" }}\n          >\n            <MaterialCommunityIcons\n              name=\"theme-light-dark\"\n              size={24}\n              color=\"#007FFF\"\n            />\n          </Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity\n          style={styles.left}\n          onPress={() => setIndex(index === 0 ? 1 : 0)}\n        >\n          <SimpleLineIcons name=\"arrow-left\" size={15} color=\"#007FFF\" />\n          <Text\n            style={{ ...styles.text, color: darkTheme ? \"lightgrey\" : \"black\" }}\n          >\n            Discover\n          </Text>\n        </TouchableOpacity>\n      )}\n\n      <Text style={{ ...styles.center, color: darkTheme ? \"white\" : \"black\" }}>\n        {index ? \"All News\" : \"Discover\"}\n      </Text>\n      {index ? (\n        <TouchableOpacity\n          style={styles.right}\n          onPress={() => fetchNews(\"general\")}\n        >\n          <Text style={styles.text}>\n            <AntDesign name=\"reload1\" size={24} color=\"#007FFF\" />\n          </Text>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity\n          style={styles.left}\n          onPress={() => setIndex(index === 0 ? 1 : 0)}\n        >\n          <Text\n            style={{ ...styles.text, color: darkTheme ? \"white\" : \"black\" }}\n          >\n            All News\n          </Text>\n          <SimpleLineIcons name=\"arrow-right\" size={15} color=\"#007FFF\" />\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nexport default TopNavigation;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: 10,\n    alignItems: \"center\",\n    borderBottomColor: \"black\",\n    borderBottomWidth: 0.5,\n  },\n  center: {\n    paddingBottom: 6,\n    borderBottomColor: \"#007FFF\",\n    borderBottomWidth: 5,\n    borderRadius: 10,\n    fontSize: 16,\n    fontWeight: \"700\",\n  },\n  left: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: 80,\n    justifyContent: \"space-between\",\n  },\n  text: {\n    fontSize: 16,\n  },\n  right: {\n    width: 80,\n    alignItems: \"flex-end\",\n  },\n});"]},"metadata":{},"sourceType":"module"}