{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thebeliverbot/Desktop/practice-stuff/news-app/Screens/DiscoverScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from \"react\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Carousel from \"react-native-snap-carousel\";\nimport { categories, sources } from \"../API/api\";\nimport { NewsContext } from \"../API/Context\";\nimport Search from \"../components/Search\";\n\nvar DiscoverScreen = function DiscoverScreen() {\n  var windowWidth = Dimensions.get(\"window\").width;\n  var SLIDE_WIDTH = Math.round(windowWidth / 3.5);\n\n  var _useContext = useContext(NewsContext),\n      setCategory = _useContext.setCategory,\n      setSource = _useContext.setSource,\n      darkTheme = _useContext.darkTheme;\n\n  return React.createElement(View, {\n    style: styles.discover,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Search, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.subtitle), {}, {\n      color: darkTheme ? \"white\" : \"black\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Categories\"), React.createElement(Carousel, {\n    layout: \"default\",\n    data: categories,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return setCategory(item.name);\n        },\n        style: styles.category,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: {\n          uri: item.pic\n        },\n        style: styles.categoryImage,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.name), {}, {\n          color: darkTheme ? \"white\" : \"black\"\n        }),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      }, item.name));\n    },\n    sliderWidth: windowWidth,\n    itemWidth: SLIDE_WIDTH,\n    activeSlideAlignment: \"start\",\n    inactiveSlideScale: 1,\n    inactiveSlideOpacity: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.subtitle), {}, {\n      color: darkTheme ? \"white\" : \"black\"\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Sources\"), React.createElement(View, {\n    style: styles.sources,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, sources.map(function (s) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return setSource(s.id);\n      },\n      key: s.id,\n      style: styles.sourceContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: s.pic\n      },\n      style: styles.sourceImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n\nexport default DiscoverScreen;\nvar styles = StyleSheet.create({\n  discover: {\n    padding: 10,\n    alignItems: \"center\"\n  },\n  subtitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingBottom: 8,\n    marginHorizontal: 5,\n    borderBottomColor: \"#007FFF\",\n    borderBottomWidth: 5,\n    alignSelf: \"flex-start\",\n    borderRadius: 10\n  },\n  category: {\n    height: 130,\n    margin: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\"\n  },\n  categoryImage: {\n    height: \"60%\",\n    width: \"100%\",\n    resizeMode: \"contain\"\n  },\n  name: {\n    fontSize: 14,\n    textTransform: \"capitalize\"\n  },\n  sources: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    paddingVertical: 15\n  },\n  sourceContainer: {\n    height: 150,\n    width: \"40%\",\n    borderRadius: 10,\n    margin: 15,\n    backgroundColor: \"#cc313d\"\n  },\n  sourceImage: {\n    height: \"100%\",\n    borderRadius: 10,\n    resizeMode: \"cover\"\n  }\n});","map":{"version":3,"sources":["/home/thebeliverbot/Desktop/practice-stuff/news-app/Screens/DiscoverScreen.js"],"names":["React","useContext","Carousel","categories","sources","NewsContext","Search","DiscoverScreen","windowWidth","Dimensions","get","width","SLIDE_WIDTH","Math","round","setCategory","setSource","darkTheme","styles","discover","subtitle","color","item","index","name","category","uri","pic","categoryImage","map","s","id","sourceContainer","sourceImage","StyleSheet","create","padding","alignItems","fontSize","fontWeight","paddingBottom","marginHorizontal","borderBottomColor","borderBottomWidth","alignSelf","borderRadius","height","margin","justifyContent","resizeMode","textTransform","flexDirection","flexWrap","paddingVertical","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  StyleSheet,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Carousel from \"react-native-snap-carousel\";\nimport { categories, sources } from \"../API/api\";\nimport { NewsContext } from \"../API/Context\";\nimport Search from \"../components/Search\";\n\nconst DiscoverScreen = () => {\n  const windowWidth = Dimensions.get(\"window\").width;\n  const SLIDE_WIDTH = Math.round(windowWidth / 3.5);\n\n  const { setCategory, setSource, darkTheme } = useContext(NewsContext);\n\n  return (\n    <View style={styles.discover}>\n      <Search />\n      <Text\n        style={{ ...styles.subtitle, color: darkTheme ? \"white\" : \"black\" }}\n      >\n        Categories\n      </Text>\n      <Carousel\n        layout={\"default\"}\n        data={categories}\n        renderItem={({ item, index }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => setCategory(item.name)}\n              style={styles.category}\n            >\n              <Image source={{ uri: item.pic }} style={styles.categoryImage} />\n              <Text\n                style={{ ...styles.name, color: darkTheme ? \"white\" : \"black\" }}\n              >\n                {item.name}\n              </Text>\n            </TouchableOpacity>\n          );\n        }}\n        sliderWidth={windowWidth}\n        itemWidth={SLIDE_WIDTH}\n        activeSlideAlignment={\"start\"}\n        inactiveSlideScale={1}\n        inactiveSlideOpacity={1}\n      />\n      <Text\n        style={{ ...styles.subtitle, color: darkTheme ? \"white\" : \"black\" }}\n      >\n        Sources\n      </Text>\n      <View style={styles.sources}>\n        {sources.map((s) => (\n          <TouchableOpacity\n            onPress={() => setSource(s.id)}\n            key={s.id}\n            style={styles.sourceContainer}\n          >\n            <Image source={{ uri: s.pic }} style={styles.sourceImage} />\n          </TouchableOpacity>\n        ))}\n      </View>\n    </View>\n  );\n};\n\nexport default DiscoverScreen;\n\nconst styles = StyleSheet.create({\n  discover: {\n    padding: 10,\n    alignItems: \"center\",\n  },\n  subtitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    paddingBottom: 8,\n    marginHorizontal: 5,\n    borderBottomColor: \"#007FFF\",\n    borderBottomWidth: 5,\n    alignSelf: \"flex-start\",\n    borderRadius: 10,\n  },\n  category: {\n    height: 130,\n    margin: 10,\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  categoryImage: {\n    height: \"60%\",\n    width: \"100%\",\n    resizeMode: \"contain\",\n  },\n  name: {\n    fontSize: 14,\n    textTransform: \"capitalize\",\n  },\n  sources: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    paddingVertical: 15,\n  },\n  sourceContainer: {\n    height: 150,\n    width: \"40%\",\n    borderRadius: 10,\n    margin: 15,\n    backgroundColor: \"#cc313d\",\n  },\n  sourceImage: {\n    height: \"100%\",\n    borderRadius: 10,\n    resizeMode: \"cover\",\n  },\n});"]},"metadata":{},"sourceType":"module"}