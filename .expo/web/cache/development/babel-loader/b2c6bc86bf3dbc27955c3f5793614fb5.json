{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thebeliverbot/Desktop/practice-stuff/news-app/components/InshortTabs.js\";\n\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport React, { useContext, useState } from 'react';\nimport { SceneMap, TabView } from 'react-native-tab-view';\nimport DiscoverScreen from \"../Screens/DiscoverScreen\";\nimport NewsScreen from \"../Screens/NewsScreen\";\nimport TopNavigation from \"./TopNavigation\";\nimport { NewsContext } from \"../API/Context\";\n\nvar InshortTabs = function InshortTabs() {\n  var layout = useWindowDimensions();\n\n  var _useContext = useContext(NewsContext),\n      index = _useContext.index,\n      setIndex = _useContext.setIndex;\n\n  var _useState = useState([{\n    key: \"first\",\n    title: \"Discover\"\n  }, {\n    key: \"second\",\n    title: \"News\"\n  }]),\n      _useState2 = _slicedToArray(_useState, 1),\n      routes = _useState2[0];\n\n  var renderScene = SceneMap({\n    first: DiscoverScreen,\n    second: NewsScreen\n  });\n  return React.createElement(TabView, {\n    navigationState: {\n      index: index,\n      routes: routes\n    },\n    renderScene: renderScene,\n    onIndexChange: setIndex,\n    initialLayout: {\n      width: layout.width\n    },\n    renderTabBar: function renderTabBar() {\n      return React.createElement(TopNavigation, {\n        index: index,\n        setIndex: setIndex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default InshortTabs;","map":{"version":3,"sources":["/home/thebeliverbot/Desktop/practice-stuff/news-app/components/InshortTabs.js"],"names":["React","useContext","useState","SceneMap","TabView","DiscoverScreen","NewsScreen","TopNavigation","NewsContext","InshortTabs","layout","useWindowDimensions","index","setIndex","key","title","routes","renderScene","first","second","width"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,uBAAlC;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AACA,SAASC,WAAT;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAEtB,MAAMC,MAAM,GAAGC,mBAAmB,EAAlC;;AAKA,oBAA0BV,UAAU,CAACO,WAAD,CAApC;AAAA,MAAOI,KAAP,eAAOA,KAAP;AAAA,MAAcC,QAAd,eAAcA,QAAd;;AAIA,kBAAiBX,QAAQ,CAAC,CACxB;AAAEY,IAAAA,GAAG,EAAE,OAAP;AAAgBC,IAAAA,KAAK,EAAE;AAAvB,GADwB,EAExB;AAAED,IAAAA,GAAG,EAAE,QAAP;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFwB,CAAD,CAAzB;AAAA;AAAA,MAAOC,MAAP;;AAOA,MAAMC,WAAW,GAAGd,QAAQ,CAAC;AAC3Be,IAAAA,KAAK,EAAEb,cADoB;AAE3Bc,IAAAA,MAAM,EAAEb;AAFmB,GAAD,CAA5B;AAKF,SAEE,oBAAC,OAAD;AACA,IAAA,eAAe,EAAE;AAACM,MAAAA,KAAK,EAALA,KAAD;AAAQI,MAAAA,MAAM,EAANA;AAAR,KADjB;AAEA,IAAA,WAAW,EAAEC,WAFb;AAGA,IAAA,aAAa,EAAEJ,QAHf;AAIA,IAAA,aAAa,EAAE;AAACO,MAAAA,KAAK,EAAEV,MAAM,CAACU;AAAf,KAJf;AAKA,IAAA,YAAY,EAAE;AAAA,aAAK,oBAAC,aAAD;AACnB,QAAA,KAAK,EAAER,KADY;AAEnB,QAAA,QAAQ,EAAEC,QAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AAAA,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF;AAaD,CApCD;;AAsCA,eAAeJ,WAAf","sourcesContent":["import { useWindowDimensions } from \"react-native\";\nimport React, { useContext, useState } from 'react';\nimport { SceneMap, TabView } from 'react-native-tab-view';\nimport DiscoverScreen from '../Screens/DiscoverScreen';\nimport NewsScreen from '../Screens/NewsScreen';\nimport TopNavigation from \"./TopNavigation\";\nimport { NewsContext } from \"../API/Context\";\n\nconst InshortTabs = () => {\n    // this lay out will be use for identifying of our app \n    const layout = useWindowDimensions()\n\n    //  defining state\n    // const [index, setIndex] = useState(1);\n\n    const {index, setIndex} = useContext(NewsContext);\n\n\n    //  creating routes\n    const [routes] = useState([\n      { key: \"first\", title: \"Discover\" },\n      { key: \"second\", title: \"News\" },\n    ]);\n  \n\n    //  To render\n    const renderScene = SceneMap({\n      first: DiscoverScreen,\n      second: NewsScreen,\n    });\n\n  return (\n\n    <TabView\n    navigationState={{index, routes}}\n    renderScene={renderScene}\n    onIndexChange={setIndex}\n    initialLayout={{width: layout.width}}\n    renderTabBar={()=> <TopNavigation\n    index={index}\n    setIndex={setIndex}\n    />}\n    />\n  );\n};\n\nexport default InshortTabs;\n"]},"metadata":{},"sourceType":"module"}